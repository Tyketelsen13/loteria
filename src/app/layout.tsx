/**
 * Root Layout Component for Loter√≠a Online
 * Main layout wrapper providing global providers, persistent UI elements, and base styling.
 */

import React from "react";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import NextAuthSessionProvider from "./SessionProvider";
import HomeIcon from "@/components/HomeIcon";
import CopyrightFooter from "@/components/CopyrightFooter";
import SettingsMenu from "@/components/SettingsMenu";
import { SettingsProvider } from "@/context/SettingsContext";
import { JWTAuthProvider } from "@/context/JWTAuthContext";

// Font configuration - Geist Sans for UI, Geist Mono for code
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// SEO metadata - TODO: Update for production
export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {/* Prevent dark mode flash by setting theme before React hydration */}
        <script
          dangerouslySetInnerHTML={{
            __html: `
              try {
                const stored = localStorage.getItem('darkMode');
                if (stored === 'true') {
                  document.documentElement.classList.add('dark');
                } else if (stored === 'false') {
                  document.documentElement.classList.remove('dark');
                } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                  document.documentElement.classList.add('dark');
                }
              } catch(e) {}
            `,
          }}
        />
        
        {/* Global providers for settings and authentication */}
        <SettingsProvider>
          <SettingsMenu />
          <JWTAuthProvider>
            <NextAuthSessionProvider>
              {children}
            </NextAuthSessionProvider>
          </JWTAuthProvider>
        </SettingsProvider>
        
        {/* Persistent UI elements on all pages */}
        <HomeIcon />
        <CopyrightFooter />
      </body>
    </html>
  );
}
